{
	"name": "Data anonymization",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DailyActivityMetricsTotal",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureMySqlTable1",
						"type": "DatasetReference"
					},
					"name": "ToDB"
				}
			],
			"transformations": [
				{
					"name": "ExternalCall1",
					"linkedService": {
						"referenceName": "RestService1",
						"type": "LinkedServiceReference"
					}
				},
				{
					"name": "CreateURLandSetUserId"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "EmptyUrltoString"
				},
				{
					"name": "Union1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tDate as date,\n\t\t{Move Minutes count} as short,\n\t\t{Calories (kcal)} as double,\n\t\t{Distance (m)} as double,\n\t\t{Heart Points} as double,\n\t\t{Heart Minutes} as short,\n\t\t{Average heart rate (bpm)} as double,\n\t\t{Max heart rate (bpm)} as double,\n\t\t{Min heart rate (bpm)} as double,\n\t\t{Low latitude (deg)} as double,\n\t\t{Low longitude (deg)} as double,\n\t\t{High latitude (deg)} as double,\n\t\t{High longitude (deg)} as double,\n\t\t{Average speed (m/s)} as double,\n\t\t{Max speed (m/s)} as double,\n\t\t{Min speed (m/s)} as double,\n\t\t{Step count} as short,\n\t\t{Average weight (kg)} as double,\n\t\t{Max weight (kg)} as double,\n\t\t{Min weight (kg)} as double,\n\t\t{Biking duration (ms)} as integer,\n\t\t{Inactive duration (ms)} as integer,\n\t\t{Walking duration (ms)} as integer,\n\t\t{Running duration (ms)} as integer,\n\t\t{Aerobics duration (ms)} as integer,\n\t\t{Basketball duration (ms)} as integer,\n\t\t{Circuit training duration (ms)} as integer,\n\t\t{Treadmill running duration (ms)} as integer,\n\t\t{Sleep duration (ms)} as string,\n\t\t{Strength training duration (ms)} as integer,\n\t\t{Weight lifting duration (ms)} as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nConditionalSplit1@UrlCheck call(mapColumn(\n\t\tcoordinatelookupurl\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\toutput(\n\t\theaders as [string,string],\n\t\tbody as (countryName as string)\n\t),\n\tallowSchemaDrift: true,\n\tstore: 'restservice',\n\tformat: 'rest',\n\ttimeout: 30,\n\trequestInterval: 100,\n\thttpMethod: 'GET',\n\trowRelativeUrl: 'coordinatelookupurl',\n\tskipRowRelativeUrl: true,\n\trequestFormat: ['type' -> 'json'],\n\tresponseFormat: ['type' -> 'json', 'documentForm' -> 'singleDocument']) ~> ExternalCall1\nsource1 derive(UserId = 1,\n\t\tcoordinatelookupurl = \"/countryCodeJSON?lat=\" + toString({Low latitude (deg)}) + \" &lng=\" + toString({Low longitude (deg)}) + \"&username=errow01058\") ~> CreateURLandSetUserId\nCreateURLandSetUserId split(!isNull(coordinatelookupurl),\n\tdisjoint: false) ~> ConditionalSplit1@(UrlCheck, Empty)\nConditionalSplit1@Empty derive(coordinatelookupurl = \"\") ~> EmptyUrltoString\nExternalCall1, EmptyUrltoString union(byName: true)~> Union1\nUnion1 derive(countryName = body.countryName) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tDate,\n\t\t{Move Minutes count},\n\t\t{Calories (kcal)},\n\t\t{Distance (m)},\n\t\t{Heart Points},\n\t\t{Heart Minutes},\n\t\t{Average heart rate (bpm)},\n\t\t{Max heart rate (bpm)},\n\t\t{Min heart rate (bpm)},\n\t\t{Average speed (m/s)},\n\t\t{Max speed (m/s)},\n\t\t{Min speed (m/s)},\n\t\t{Step count},\n\t\t{Average weight (kg)},\n\t\t{Max weight (kg)},\n\t\t{Min weight (kg)},\n\t\t{Biking duration (ms)},\n\t\t{Inactive duration (ms)},\n\t\t{Walking duration (ms)},\n\t\t{Running duration (ms)},\n\t\t{Aerobics duration (ms)},\n\t\t{Basketball duration (ms)},\n\t\t{Circuit training duration (ms)},\n\t\t{Treadmill running duration (ms)},\n\t\t{Sleep duration (ms)},\n\t\t{Strength training duration (ms)},\n\t\t{Weight lifting duration (ms)},\n\t\tUserId,\n\t\tcountryName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tDate as date,\n\t\t{Move Minutes count} as integer,\n\t\t{Calories (kcal)} as decimal(10,0),\n\t\t{Distance (m)} as decimal(10,0),\n\t\t{Heart Points} as integer,\n\t\t{Heart Minutes} as integer,\n\t\t{Average heart rate (bpm)} as integer,\n\t\tstartTime as timestamp,\n\t\t{Min heart rate (bpm)} as integer,\n\t\t{Low latitude (deg)} as decimal(10,0),\n\t\t{Low longitude (deg)} as decimal(10,0),\n\t\t{High latitude (deg)} as decimal(10,0),\n\t\t{High longitude (deg)} as decimal(10,0),\n\t\t{Average speed (m/s)} as decimal(10,0),\n\t\t{Max speed (m/s)} as decimal(10,0),\n\t\t{Min speed (m/s)} as decimal(10,0),\n\t\t{Step count} as integer,\n\t\t{Max heart rate (bpm)} as integer,\n\t\t{Max weight (kg)} as integer,\n\t\t{Min weight (kg)} as integer,\n\t\t{Biking duration (ms)} as integer,\n\t\t{Inactive duration (ms)} as integer,\n\t\t{Walking duration (ms)} as integer,\n\t\t{Running duration (ms)} as integer,\n\t\t{Aerobics duration (ms)} as integer,\n\t\t{Basketball duration (ms)} as integer,\n\t\t{Circuit training duration (ms)} as integer,\n\t\t{Treadmill running duration (ms)} as integer,\n\t\t{Sleep duration (ms)} as integer,\n\t\t{Strength training duration (ms)} as integer,\n\t\t{Weight lifting duration (ms)} as integer,\n\t\tnew_column as integer,\n\t\t{Average weight (kg)} as integer,\n\t\tId as integer,\n\t\tUserId as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ToDB"
		}
	}
}